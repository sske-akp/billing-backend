"""create initial tables

Revision ID: aeebc58faefa
Revises: 
Create Date: 2025-06-07 11:27:57.756607

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aeebc58faefa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_batches')
    op.drop_table('stock')
    op.drop_table('discounts')
    op.drop_table('products')
    op.drop_table('invoice_items')
    op.drop_table('customers')
    op.drop_table('invoices')
    op.drop_table('product_brands')
    op.drop_table('stock_summary')
    op.drop_table('product_categories')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_categories',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='product_categories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stock_summary',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('item', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('value', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('stock_summary_pkey'))
    )
    op.create_table('product_brands',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('brand', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='product_brands_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('invoice_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('invoice_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='invoices_customer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='invoices_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('customers',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gstin', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='customers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('invoice_items',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('invoice_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('batch_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('selling_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tax_percent', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('is_official', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['product_batches.id'], name=op.f('invoice_items_batch_id_fkey')),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name=op.f('invoice_items_invoice_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('invoice_items_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('invoice_items_pkey'))
    )
    op.create_table('products',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('item', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hsncode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('brand_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['product_brands.id'], name='products_brand_id_fkey'),
    sa.ForeignKeyConstraint(['category_id'], ['product_categories.id'], name='products_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('discounts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('value', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['product_categories.id'], name=op.f('discounts_category_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('discounts_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('discounts_pkey'))
    )
    op.create_table('stock',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('item', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('priceperunit', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('totalprice', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('lastupdatetimestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('stock_pkey'))
    )
    op.create_table('product_batches',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('batch_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('purchase_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('remaining_qty', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('purchase_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('source_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('discount_value', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('product_batches_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('product_batches_pkey'))
    )
    # ### end Alembic commands ###
